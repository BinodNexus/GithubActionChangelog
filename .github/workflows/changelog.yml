name: Update Changelog

on:
  pull_request_target:
    types:
      - closed  # Runs when a PR is merged

jobs:
  update-changelog:
    if: github.event.pull_request.merged == true  # Ensures it only runs on merge
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Grants write access to push changes

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update Changelog
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        run: |
          #!/bin/bash

          FILE="changelog.md"

          function createChangeLogIfNotExists() {
            if [ ! -f "$FILE" ]; then
              cat <<EOL > "$FILE"
          # Changelog

          All notable changes to this project will be documented in this file.
          The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.1.0/),
          and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

          ## [Unreleased]

          ### Features

          ### Bug Fixes

          ### Improvements

          ---
          EOL
              echo "Created $FILE with default content."
            fi
          }

          function updateChangeLog() {

            createChangeLogIfNotExists
            mergedPr=$(gh pr list --state merged --json title,labels,url --limit 1 | jq -r '.[0]')

            title=$(echo "$mergedPr" | jq -r '.title')
            url=$(echo "$mergedPr" | jq -r '.url')
            label=$(echo "$mergedPr" | jq -r '.labels[0].name')

            # Determine the heading based on the label
            case $label in
              "bug")
                heading="### Bug Fixes"
                ;;
              "feature")
                heading="### Features"
                ;;
              "improvement")
                heading="### Improvements"
                ;;
              *)
                echo "Invalid label: $label"
                exit 1
                ;;
            esac

            # Construct the new line
            replacement="$heading\n- $title. ([#${url##*/}]($url))"


            # Use awk to replace the first occurrence of the respective section
            awk -v heading="$heading" -v replacement="$replacement" '
                $0 == heading && !found {print replacement; found=1; next}
                {print}
            ' changelog.md > changelog.tmp && mv changelog.tmp changelog.md

            echo "Updated '$heading' section with: $title"

          }

          # Run the function
          updateChangeLog

      - name: Commit
        run: |
          git checkout ${{ github.event.pull_request.base.ref }}  # Ensure you're on the correct branch
          git add changelog.md
          git commit -m "Update changelog: ${{ github.event.pull_request.title }}"

      - name: Push changes
        run: |
          git push origin ${{ github.event.pull_request.base.ref }}
