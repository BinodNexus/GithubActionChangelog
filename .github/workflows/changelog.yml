name: Update Changelog

on:
  pull_request_target:
    types:
      - closed  # Runs when a PR is merged

jobs:
  update-changelog:
    if: github.event.pull_request.merged == true  # Ensures it only runs on merge
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Grants write access to push changes

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update Changelog
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        run: |
          #!/bin/bash

          FILE="changelog.md"

          function updateChangeLog() {
              # Fetch PRs and parse JSON
              prs=$(gh pr list --state merged --json title,labels,url --limit 100)

              # Arrays to store PRs
              bugs=()
              features=()
              enhancements=()

              # Process PRs
              while IFS= read -r pr; do
                  title=$(echo "$pr" | jq -r '.title')
                  url=$(echo "$pr" | jq -r '.url')
                  label=$(echo "$pr" | jq -r '.labels[0].name')

                  case "$label" in
                      "bug")
                          bugs+=("- $title. ([${url##*/}]($url))")
                          ;;
                      "feature")
                          features+=("- $title. ([${url##*/}]($url))")
                          ;;
                      "improvement")
                          enhancements+=("- $title. ([${url##*/}]($url))")
                          ;;
                  esac
              done < <(echo "$prs" | jq -c '.[]')

              # Overwrite changelog.md
              {
                  echo -e "# Changelog\n"
                  echo "All notable changes to this project will be documented in this file."
                  echo "The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.1.0/),"
                  echo "and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html)."
                  echo -e "\n## [Unreleased]\n"

                  if [[ ${#features[@]} -gt 0 ]]; then
                      echo "### Features"
                      for feature in "${features[@]}"; do echo "$feature"; done
                      echo ""
                  fi

                  if [[ ${#bugs[@]} -gt 0 ]]; then
                      echo "### Bug Fixes"
                      for bug in "${bugs[@]}"; do echo "$bug"; done
                      echo ""
                  fi

                  if [[ ${#enhancements[@]} -gt 0 ]]; then
                      echo "### Improvements"
                      for enhancement in "${enhancements[@]}"; do echo "$enhancement"; done
                      echo ""
                  fi
              } > "$FILE"  # **OVERWRITE the file instead of appending**

              echo "Changelog updated successfully."
          }

          # Run the function
          updateChangeLog

      - name: Commit
        run: |
          git checkout ${{ github.event.pull_request.base.ref }}  # Ensure you're on the correct branch
          git add changelog.md
          git commit -m "Update changelog: ${{ github.event.pull_request.title }}"

      - name: Push changes
        run: |
          git push origin ${{ github.event.pull_request.base.ref }}
